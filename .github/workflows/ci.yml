# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: e-bookJS CI

on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5 -e MYSQL_ROOT_PASSWORD=root -e MYSQL_USER=ebookjs_test -e MYSQL_PASSWORD=ebookjs_test -e MYSQL_DATABASE=ebookjs_dbtest --entrypoint sh mysql:8 -c "exec docker-entrypoint.sh mysqld --default-authentication-plugin=mysql_native_password"
        volumes:
          - './src/db/init.sql:/docker-entrypoint-initdb.d/init.sql'
        ports:
          - 3306:3306

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Run npm install
        run: npm install

      - name: Create .env file
        run: |
          touch .env
          echo TEST_DB_HOST=0.0.0.0>> .env
          echo TEST_DB_USER='root' >> .env
          echo TEST_DB_PASSWORD='root' >> .env
          echo TEST_DB_DATABASE='ebookjs_dbtest' >> .env
          cat .env

      - name: Run npm test
        run: npm run ci_test

      - name: Run npm build
        run: npm run build --if-present
